/**
 * Sony CONFIDENTIAL
 *
 * Copyright 2023 Sony Corporation
 *
 * DO NOT COPY AND/OR REDISTRIBUTE WITHOUT PERMISSION.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS''
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#pragma once

#include <cstdint>

using PLATFORM_OPTION_BIT_FLAG = uint8_t;

// clang-format off

constexpr PLATFORM_OPTION_BIT_FLAG PLATFORM_OPTION_NONE                          = (0 << 0);
constexpr PLATFORM_OPTION_BIT_FLAG PLATFORM_OPTION_APPLICATION_IS_UNREALENGINE   = (1 << 0);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 1);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 2);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 3);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 4);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 5);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 6);
//constexpr PLATFORM_OPTION_BIT_FLAG TEMP                                        = (1 << 7);

// clang-format on
